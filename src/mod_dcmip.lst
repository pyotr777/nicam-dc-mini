
 Fujitsu Fortran Version 1.2.0  Thu Dec 10 18:46:49 2015

 Compilation information
   Current directory : /volume1/home/ra000007/a03106/nicam-dc-mini/src
   Source file       : nhm/share/mod_dcmip.f90

 Option information
   Command line options : -Kident_mpi -f2004 -Kfast,parallel,auto,ocl,preex,array_private,noalias=s,mfunc=2 -Kparallel_iteration=8,instance=8,dynamic_iteration -Qi -Qt -X03 -Ncompdisp -Koptmsg=1 -Cpp -Kprefetch_cache_level=all,prefetch_iteration_L2=50 -Ksimd -Ntl_notrt -U_FIPP_ -U_FAPP_ -I../src/include -o mod_dcmip.o -c -I/opt/FJSVtclang/GM-1.2.0-19/include/mpi/fujitsu -W0,-zmpa=Yignore-intent -I/opt/FJSVtclang/GM-1.2.0-19/lib64
   Cpp options          : -U_FIPP_ -U_FAPP_ -I../src/include -I/opt/FJSVtclang/GM-1.2.0-19/include/mpi/fujitsu -I/opt/FJSVtclang/GM-1.2.0-19/lib64 -D__FUJITSU -Dunix -Dsparc -D__sparc__ -D__unix -D__sparc -D__frt_version=700 -D__HPC_ACE__ -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -Dlinux -otmp -D__sparcv9 -D__sparc_v9__ -D__arch64__
   Effective options    : -fi -g0 -AE -Free -O3 -Qi,p,t -X03
                          -x0
                          -KFLTLD -Kadr44 -Knoalias=s -Kauto -Knoautoobjstack
                          -Knocalleralloc -Kdalign -Keval -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kilfunc
                          -Klargepage -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_if -Kloop_fusion
                          -Kloop_interchange -Kloop_nopart_parallel
                          -Kloop_nopart_simd -Kloop_noversioning -Kns
                          -Kmfunc=2 -Kocl -Komitfp -Koptmsg=1 -Kpreex
                          -Kprefetch_conditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_iteration_L2=50 -Kprefetch_nostrong
                          -Kprefetch_strong_L2 -Knoshortloop -Ksimd=1
                          -Knosimd_region_constant -Knostriping -Kswp
                          -Knotemparraystack -Kunroll -Knouxsimd -KNOXFILL
                          -Knoopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_noordered_reduction -Knothreadsafe
                          -Kparallel -Kparallel_nofp_precision
                          -Karray_private -Kdynamic_iteration -Kreduction
                          -Kregion_extension -Kinstance=8
                          -Kparallel_iteration=8
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Ncompdisp
                          -Nnocopyarg -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nline -Nlst -Nlst=i -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nquickdbg=noargchk
                          -Nquickdbg=nosubchk -Nquickdbg=noundef -NRnotrap
                          -Nnorecursive -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 Module "mod_dcmip"
  (inc)(line-no.)(nest)(optimize)
               1                     !cx Warning
               2                     !cx This module is not available with mini0version
               3                     !cx The file is here just for avoiding the link error.
               4                     module mod_dcmip
               5                     
               6                       IMPLICIT NONE
               7                     
               8                       public :: test1_advection_deformation
               9                       public :: test1_advection_hadley
              10                       public :: test2_steady_state_mountain
              11                       public :: test2_schaer_mountain
              12                       public :: test3_gravity_wave
              13                     
              14                     CONTAINS
              15                     
              16                     SUBROUTINE test1_advection_deformation (lon,lat,p,z,zcoords,u,v,w,t,phis,ps,rho,q,q1,q2,q3,q4)
              17                     
              18                     IMPLICIT NONE
              19                     !-----------------------------------------------------------------------
              20                     !     input/output params parameters at given location
              21                     !-----------------------------------------------------------------------
              22                     
              23                     	real(8), intent(in)  :: lon, &		! Longitude (radians)
              24                     				lat, &		! Latitude (radians)
              25                     				z		! Height (m)
              26                     
              27                     	real(8), intent(inout) :: p		! Pressure  (Pa)
              28                     
              29                     	integer,  intent(in) :: zcoords 	! 0 or 1 see below
              30                     
              31                     	real(8), intent(out) :: u, & 		! Zonal wind (m s^-1)
              32                     				v, &		! Meridional wind (m s^-1)
              33                     				w, &		! Vertical Velocity (m s^-1)
              34                     				t, & 		! Temperature (K)
              35                     				phis, & 	! Surface Geopotential (m^2 s^-2)
              36                     				ps, & 		! Surface Pressure (Pa)
              37                     				rho, & 		! density (kg m^-3)
              38                     				q, & 		! Specific Humidity (kg/kg)
              39                     				q1, & 		! Tracer q1 (kg/kg)
              40                     				q2, & 		! Tracer q2 (kg/kg)
              41                     				q3, & 		! Tracer q3 (kg/kg)
              42                     				q4		! Tracer q4 (kg/kg)
              43                     
              44                     	! if zcoords = 1, then we use z and output p
              45                     	! if zcoords = 0, then we use p
              46                     
              47                     write(*,*) "*** Error. <DCMIP> not supported in mini-version"
              48                     stop
              49                     u=0
              50                     v=0
              51                     w=0
              52                     t=0
              53                     phis=0
              54                     ps=0
              55                     rho=0
              56                     q=0
              57                     q1=0
              58                     q2=0
              59                     q3=0
              60                     q4=0
              61                     return
              62                     END SUBROUTINE test1_advection_deformation
              63                     
              64                     
              65                     SUBROUTINE test1_advection_hadley (lon,lat,p,z,zcoords,u,v,w,t,phis,ps,rho,q,q1)
              66                     
              67                     IMPLICIT NONE
              68                     !-----------------------------------------------------------------------
              69                     !     input/output params parameters at given location
              70                     !-----------------------------------------------------------------------
              71                     
              72                     	real(8), intent(in)  :: lon, &		! Longitude (radians)
              73                     				lat, &		! Latitude (radians)
              74                     				z		! Height (m)
              75                     
              76                     	real(8), intent(inout) :: p		! Pressure  (Pa)
              77                     
              78                     	integer,  intent(in) :: zcoords 	! 0 or 1 see below
              79                     
              80                     	real(8), intent(out) :: u, & 		! Zonal wind (m s^-1)
              81                     				v, &		! Meridional wind (m s^-1)
              82                     				w, &		! Vertical Velocity (m s^-1)
              83                     				t, & 		! Temperature (K)
              84                     				phis, & 	! Surface Geopotential (m^2 s^-2)
              85                     				ps, & 		! Surface Pressure (Pa)
              86                     				rho, & 		! density (kg m^-3)
              87                     				q, & 		! Specific Humidity (kg/kg)
              88                     				q1 		! Tracer q1 (kg/kg)
              89                     
              90                     	! if zcoords = 1, then we use z and output p
              91                     	! if zcoords = 0, then we use p
              92                     
              93                     write(*,*) "*** Error. <DCMIP> not supported in mini-version"
              94                     stop
              95                     u=0
              96                     v=0
              97                     w=0
              98                     t=0
              99                     phis=0
             100                     ps=0
             101                     rho=0
             102                     q=0
             103                     q1=0
             104                     return
             105                     END SUBROUTINE test1_advection_hadley
             106                     
             107                     SUBROUTINE test2_steady_state_mountain (lon,lat,p,z,zcoords,hybrid_eta,hyam,hybm,u,v,w,t,phis,ps,rho,q)
             108                     
             109                     IMPLICIT NONE
             110                     !-----------------------------------------------------------------------
             111                     !     input/output params parameters at given location
             112                     !-----------------------------------------------------------------------
             113                     
             114                     	real(8), intent(in)  :: lon, &		! Longitude (radians)
             115                     				lat, &		! Latitude (radians)
             116                     				z, &		! Height (m)
             117                     				hyam, &		! A coefficient for hybrid-eta coordinate, at model level midpoint
             118                     				hybm		! B coefficient for hybrid-eta coordinate, at model level midpoint
             119                     
             120                     	logical, intent(in)  :: hybrid_eta      ! flag to indicate whether the hybrid sigma-p (eta) coordinate is used
             121                                                                     ! if set to .true., then the pressure will be computed via the
             122                                                                     !    hybrid coefficients hyam and hybm, they need to be initialized
             123                                                                     ! if set to .false. (for pressure-based models): the pressure is already pre-computed
             124                                                                     !    and is an input value for this routine
             125                                                                     ! for height-based models: pressure will always be computed based on the height and
             126                                                                     !    hybrid_eta is not used
             127                     
             128                     	real(8), intent(inout) :: p		! Pressure  (Pa)
             129                     
             130                     	integer,  intent(in) :: zcoords 	! 0 or 1 see below
             131                     
             132                     	real(8), intent(out) :: u, & 		! Zonal wind (m s^-1)
             133                     				v, &		! Meridional wind (m s^-1)
             134                     				w, &		! Vertical Velocity (m s^-1)
             135                     				t, & 		! Temperature (K)
             136                     				phis, & 	! Surface Geopotential (m^2 s^-2)
             137                     				ps, & 		! Surface Pressure (Pa)
             138                     				rho, & 		! density (kg m^-3)
             139                     				q 		! Specific Humidity (kg/kg)
             140                     
             141                     	! if zcoords = 1, then we use z and output p
             142                     	! if zcoords = 0, then we compute or use p
             143                             !
             144                     	! In hybrid-eta coords: p = hyam p0 + hybm ps
             145                             !
             146                             ! The grid-point based initial data are computed in this routine.
             147                     
             148                     write(*,*) "*** Error. <DCMIP> not supported in mini-version"
             149                     stop
             150                     u=0
             151                     v=0
             152                     w=0
             153                     t=0
             154                     phis=0
             155                     ps=0
             156                     rho=0
             157                     q=0
             158                     return
             159                     END SUBROUTINE test2_steady_state_mountain
             160                     
             161                     
             162                     SUBROUTINE test2_schaer_mountain (lon,lat,p,z,zcoords,hybrid_eta,hyam,hybm,shear,u,v,w,t,phis,ps,rho,q)
             163                     
             164                     IMPLICIT NONE
             165                     !-----------------------------------------------------------------------
             166                     !     input/output params parameters at given location
             167                     !-----------------------------------------------------------------------
             168                     
             169                     	real(8), intent(in)  :: lon, &		! Longitude (radians)
             170                     				lat, &		! Latitude (radians)
             171                     				z,   &		! Height (m)
             172                     				hyam, &		! A coefficient for hybrid-eta coordinate, at model level midpoint
             173                     				hybm		! B coefficient for hybrid-eta coordinate, at model level midpoint
             174                     
             175                     	logical, intent(in)  :: hybrid_eta      ! flag to indicate whether the hybrid sigma-p (eta) coordinate is used
             176                                                                     ! if set to .true., then the pressure will be computed via the
             177                                                                     !    hybrid coefficients hyam and hybm, they need to be initialized
             178                                                                     ! if set to .false. (for pressure-based models): the pressure is already pre-computed
             179                                                                     !    and is an input value for this routine
             180                                                                     ! for height-based models: pressure will always be computed based on the height and
             181                                                                     !    hybrid_eta is not used
             182                     
             183                     	real(8), intent(inout) :: p		! Pressure  (Pa)
             184                     
             185                     
             186                     	integer,  intent(in) :: zcoords, &	! 0 or 1 see below
             187                     				shear	 	! 0 or 1 see below
             188                     
             189                     	real(8), intent(out) :: u, & 		! Zonal wind (m s^-1)
             190                     				v, &		! Meridional wind (m s^-1)
             191                     				w, &		! Vertical Velocity (m s^-1)
             192                     				t, & 		! Temperature (K)
             193                     				phis, & 	! Surface Geopotential (m^2 s^-2)
             194                     				ps, & 		! Surface Pressure (Pa)
             195                     				rho, & 		! density (kg m^-3)
             196                     				q 		! Specific Humidity (kg/kg)
             197                     
             198                     	! if zcoords = 1, then we use z and output p
             199                     	! if zcoords = 0, then we either compute or use p
             200                     
             201                     	! if shear = 1, then we use shear flow
             202                     	! if shear = 0, then we use constant u
             203                     
             204                     write(*,*) "*** Error. <DCMIP> not supported in mini-version"
             205                     stop
             206                     u=0
             207                     v=0
             208                     w=0
             209                     t=0
             210                     phis=0
             211                     ps=0
             212                     rho=0
             213                     q=0
             214                     return
             215                     END SUBROUTINE test2_schaer_mountain
             216                     
             217                     SUBROUTINE test3_gravity_wave (lon,lat,p,z,zcoords,u,v,w,t,phis,ps,rho,q)
             218                     
             219                     IMPLICIT NONE
             220                     !-----------------------------------------------------------------------
             221                     !     input/output params parameters at given location
             222                     !-----------------------------------------------------------------------
             223                     
             224                     	real(8), intent(in)  :: lon, &		! Longitude (radians)
             225                     				lat, &		! Latitude (radians)
             226                     				z		! Height (m)
             227                     
             228                     	real(8), intent(inout) :: p		! Pressure  (Pa)
             229                     
             230                     
             231                     	integer,  intent(in) :: zcoords 	! 0 or 1 see below
             232                     
             233                     	real(8), intent(out) :: u, & 		! Zonal wind (m s^-1)
             234                     				v, &		! Meridional wind (m s^-1)
             235                     				w, &		! Vertical Velocity (m s^-1)
             236                     				t, & 		! Temperature (K)
             237                     				phis, & 	! Surface Geopotential (m^2 s^-2)
             238                     				ps, & 		! Surface Pressure (Pa)
             239                     				rho, & 		! density (kg m^-3)
             240                     				q 		! Specific Humidity (kg/kg)
             241                     
             242                     	! if zcoords = 1, then we use z and output z
             243                     	! if zcoords = 0, then we use p
             244                     
             245                     write(*,*) "*** Error. <DCMIP> not supported in mini-version"
             246                     stop
             247                     u=0
             248                     v=0
             249                     w=0
             250                     t=0
             251                     phis=0
             252                     ps=0
             253                     rho=0
             254                     q=0
             255                     return
             256                     END SUBROUTINE test3_gravity_wave
             257                     !
             258                     !
             259                     end module mod_dcmip
             260                     
             261                     

 Diagnostic messages: program name(mod_dcmip)
  Module subprogram name(test1_advection_deformation)
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 16: Dummy argument 'zcoords' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 16: Dummy argument 'z' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 16: Dummy argument 'p' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 16: Dummy argument 'lat' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 16: Dummy argument 'lon' not used in this subprogram.
   jwd1309i-i  "nhm/share/mod_dcmip.f90", line 49: Statement unreachable.
  Module subprogram name(test1_advection_hadley)
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 65: Dummy argument 'zcoords' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 65: Dummy argument 'z' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 65: Dummy argument 'p' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 65: Dummy argument 'lat' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 65: Dummy argument 'lon' not used in this subprogram.
   jwd1309i-i  "nhm/share/mod_dcmip.f90", line 95: Statement unreachable.
  Module subprogram name(test2_steady_state_mountain)
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 107: Dummy argument 'hybm' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 107: Dummy argument 'hyam' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 107: Dummy argument 'hybrid_eta' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 107: Dummy argument 'zcoords' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 107: Dummy argument 'z' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 107: Dummy argument 'p' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 107: Dummy argument 'lat' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 107: Dummy argument 'lon' not used in this subprogram.
   jwd1309i-i  "nhm/share/mod_dcmip.f90", line 150: Statement unreachable.
  Module subprogram name(test2_schaer_mountain)
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 162: Dummy argument 'shear' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 162: Dummy argument 'hybm' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 162: Dummy argument 'hyam' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 162: Dummy argument 'hybrid_eta' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 162: Dummy argument 'zcoords' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 162: Dummy argument 'z' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 162: Dummy argument 'p' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 162: Dummy argument 'lat' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 162: Dummy argument 'lon' not used in this subprogram.
   jwd1309i-i  "nhm/share/mod_dcmip.f90", line 206: Statement unreachable.
  Module subprogram name(test3_gravity_wave)
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 217: Dummy argument 'zcoords' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 217: Dummy argument 'z' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 217: Dummy argument 'p' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 217: Dummy argument 'lat' not used in this subprogram.
   jwd2008i-i  "nhm/share/mod_dcmip.f90", line 217: Dummy argument 'lon' not used in this subprogram.
   jwd1309i-i  "nhm/share/mod_dcmip.f90", line 247: Statement unreachable.

 Procedure information
   Lines      : 261
   Statements : 106
   Stack(byte): 576
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 261
   Total statements : 106
   Total stack(byte): 576
   Total prefetch num: 0

