
 Fujitsu Fortran Version 1.2.0  Fri Dec 11 19:59:56 2015

 Compilation information
   Current directory : /volume1/home/ra000007/a03106/nicam-dc-mini/src/tool
   Source file       : mod_option.f90

 Option information
   Command line options : -Kident_mpi -f2004 -Kfast,parallel,auto,ocl,preex,array_private,noalias=s,mfunc=2 -Kparallel_iteration=8,instance=8,dynamic_iteration -Qi -Qt -X03 -Ncompdisp -Koptmsg=1 -Cpp -Kprefetch_cache_level=all,prefetch_iteration_L2=50 -Ksimd -Ntl_notrt -U_FIPP_ -U_FAPP_ -I../../src -o mod_option.o -c -I/opt/FJSVtclang/GM-1.2.0-19/include/mpi/fujitsu -W0,-zmpa=Yignore-intent -I/opt/FJSVtclang/GM-1.2.0-19/lib64
   Cpp options          : -U_FIPP_ -U_FAPP_ -I../../src -I/opt/FJSVtclang/GM-1.2.0-19/include/mpi/fujitsu -I/opt/FJSVtclang/GM-1.2.0-19/lib64 -D__FUJITSU -Dunix -Dsparc -D__sparc__ -D__unix -D__sparc -D__frt_version=700 -D__HPC_ACE__ -D__ELF__ -D__unix__ -D__linux__ -D__linux -Asystem(unix) -Dlinux -otmp -D__sparcv9 -D__sparc_v9__ -D__arch64__
   Effective options    : -fi -g0 -AE -Free -O3 -Qi,p,t -X03
                          -x0
                          -KFLTLD -Kadr44 -Knoalias=s -Kauto -Knoautoobjstack
                          -Knocalleralloc -Kdalign -Keval -Knofenv_access
                          -Kfp_contract -Kfp_relaxed -Kfsimple -Kilfunc
                          -Klargepage -Kloop_blocking -Kloop_fission
                          -Kloop_nofission_if -Kloop_fusion
                          -Kloop_interchange -Kloop_nopart_parallel
                          -Kloop_nopart_simd -Kloop_noversioning -Kns
                          -Kmfunc=2 -Kocl -Komitfp -Koptmsg=1 -Kpreex
                          -Kprefetch_conditional -Kprefetch_noindirect
                          -Kprefetch_sequential=auto -Kprefetch_nostride
                          -Kprefetch_cache_level=all -Kprefetch_noinfer
                          -Kprefetch_iteration_L2=50 -Kprefetch_nostrong
                          -Kprefetch_strong_L2 -Knoshortloop -Ksimd=1
                          -Knosimd_region_constant -Knostriping -Kswp
                          -Knotemparraystack -Kunroll -Knouxsimd -KNOXFILL
                          -Knoopenmp -Kopenmp_noassume_norecurrence
                          -Kopenmp_noordered_reduction -Knothreadsafe
                          -Kparallel -Kparallel_nofp_precision
                          -Karray_private -Kdynamic_iteration -Kreduction
                          -Kregion_extension -Kinstance=8
                          -Kparallel_iteration=8
                          -Nallextput -Nnoalloc_assign
                          -Ncancel_overtime_compilation -Ncompdisp
                          -Nnocopyarg -Nfreealloc -Nf90move -Nnohook_func
                          -Nnohook_time -Nline -Nlst -Nlst=i -Nlst=p -Nlst=t
                          -Nnomallocfree -Nnoobsfun -Nquickdbg=noargchk
                          -Nquickdbg=nosubchk -Nquickdbg=noundef -NRnotrap
                          -Nnorecursive -Nrt_notune -Nnosave
                          -Nsetvalue=noheap -Nsetvalue=nostack
                          -Nsetvalue=noscalar -Nsetvalue=noarray
                          -Nsetvalue=nostruct -Nuse_rodata

 Module "mod_tool_option"
  (inc)(line-no.)(nest)(optimize)
               1                     !-------------------------------------------------------------------------------
               2                     !
               3                     !+ module option interpreter
               4                     !
               5                     !-------------------------------------------------------------------------------
               6                     module mod_tool_option
               7                       !-----------------------------------------------------------------------------
               8                       !
               9                       !++ Description:
              10                       !      Read argument and convert to namelist format
              11                       !      This idea is referenced from GTOOL3 suite
              12                       !
              13                       !++ Current Corresponding Author: H.Yashiro
              14                       !
              15                       !++ History:
              16                       !      Version   Date      Comment
              17                       !      -----------------------------------------------------------------------
              18                       !      0.90      11-09-01  H.Yashiro : [NEW]
              19                       !
              20                       !-----------------------------------------------------------------------------
              21                       !
              22                       !++ Used modules
              23                       !
              24                       !-----------------------------------------------------------------------------
              25                       implicit none
              26                       private
              27                       !-----------------------------------------------------------------------------
              28                       !
              29                       !++ public procedure
              30                       !
              31                       public :: OPT_convert
              32                       !-----------------------------------------------------------------------------
              33                       !
              34                       !++ public param & variable
              35                       !
              36                       integer, public :: OPT_fid !< fileunit number for namelist
              37                       !-----------------------------------------------------------------------------
              38                       !
              39                       !++ private procedure
              40                       !
              41                       !-----------------------------------------------------------------------------
              42                       !
              43                       !++ private param & variable
              44                       !
              45                       !-----------------------------------------------------------------------------
              46                     contains
              47                       !-----------------------------------------------------------------------------
              48                       !> Read argument and convert to namelist format
              49                       !-----------------------------------------------------------------------------
              50                       subroutine OPT_convert( ninfile )
              51                         implicit none
              52                     
              53                         integer, intent(out) :: ninfile !< [out] nuber of input files
              54                     
              55                         character(LEN=256) :: argstr
              56                         character(LEN=2)   :: snf
              57                     
              58                     #ifdef _NOF2003
              59                       integer :: IARGC
              60                     #else
              61                       integer :: command_argument_count
              62                     #endif
              63                     
              64                         integer :: n, narg, ls, eq
              65                         !---------------------------------------------------------------------------
              66                     
              67                     #ifdef _NOF2003
              68                         narg = IARGC()
              69                     #else
              70                         narg = command_argument_count()
              71                     #endif
              72                     
              73                         ninfile = 0
              74                     
              75                         write(OPT_fid,'(A)') '&OPTION'
              76                     
              77     1                   do n = 1, narg
              78     1               
              79     1               #ifdef _NOF2003
              80     1                      call GETARG(n,argstr)
              81     1               #else
              82     1                      call get_command_argument(n,argstr)
              83     1               #endif
              84     1               
              85     1                      ls = len_trim(argstr)
              86     1               
              87     2                      if ( argstr(1:1) == '-' ) then
              88     3                         if ( argstr(2:2) == '-' ) then                               !! '--option' format
              89     3                            write(OPT_fid,'(A)') ' '//argstr(3:ls)//'=F'
              90     3                         elseif ( argstr(2:3) == 'no' .OR. argstr(2:3) == 'NO' ) then !! '-nooption'/'-NOOPTION' format
              91     3                            write(OPT_fid,'(A)') ' '//argstr(4:ls)//'=F'
              92     3                         else                                                         !! '-option' format
              93     3                            write(OPT_fid,'(A)') ' '//argstr(2:ls)//'=T'
              94     3                         endif
              95     2                      elseif( index(argstr,'=') == 0 ) then                           !! no '=' is filename
              96     2                         ninfile = ninfile + 1
              97     2                         write(snf,'(I2.2)') ninfile
              98     2                         write(OPT_fid,'(A)') ' infile('//snf//')="'//trim(adjustl(argstr))//'"'
              99     2                      elseif(      index(trim(argstr),'/') /= 0 &
             100     2                              .OR. index(trim(argstr),' ') /= 0 ) then                !! append "string"
             101     2                         eq = index(argstr,'=')
             102     2                         write(OPT_fid,'(A)') ' '//argstr(1:eq)//'"'//argstr(eq+1:ls)//'"'
             103     2                      else                                                            !! without any change
             104     2                         write(OPT_fid,'(A)') ' '//argstr(1:ls)
             105     2                      endif
             106     1                   enddo
             107                     
             108                         write(OPT_fid,'(A)') ' &END'
             109                         rewind(OPT_fid)
             110                     
             111                         return
             112                       end subroutine OPT_convert
             113                     
             114                     end module mod_tool_option
             115                     !-------------------------------------------------------------------------------

 Procedure information
   Lines      : 115
   Statements : 43
   Stack(byte): 4000
   Prefetch num: 0

 Total information
   Procedures       : 1
   Total lines      : 115
   Total statements : 43
   Total stack(byte): 4000
   Total prefetch num: 0

